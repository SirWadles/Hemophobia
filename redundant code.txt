# #Screen Adjustments (Second part)
# camera_surface = p.Surface((2000, 2000))  
# zoom_scale = 2

  # #Movement Keys
    # if p.key.get_pressed()[p.K_a] and p.key.get_pressed()[p.K_w]:
    #     move(-1, -1)
    #     player.x -= 2.5
    #     player.y -= 2.5
    # elif p.key.get_pressed()[p.K_a] and p.key.get_pressed()[p.K_s]:
    #     move(-1, 1)
    #     player.x -= 2.5
    #     player.y += 2.5
    # elif p.key.get_pressed()[p.K_d] and p.key.get_pressed()[p.K_w]:
    #     move(1, -1)
    #     player.x += 2.5
    #     player.y -= 2.5
    # elif p.key.get_pressed()[p.K_d] and p.key.get_pressed()[p.K_s]:
    #     move(1, 1)
    #     player.x += 2.5
    #     player.y += 2.5
    # elif p.key.get_pressed()[p.K_w]: #up
    #     move(0, -1)
    #     player.y -= 2.5
    # elif p.key.get_pressed()[p.K_a]: #left
    #     move(-1, 0)
    #     player.x -= 2.5
    # elif p.key.get_pressed()[p.K_s]: #down
    #     move(0, 1)
    #     player.y += 2.5
    # elif p.key.get_pressed()[p.K_d]: #right
    #     move(1, 0)
    #     player.x += 2.5

    # #Camera Surface (SEcond)
    # # camera_surface.fill((255, 255, 255))  # Clear with white background
    # camera_surface.blit(background, (0, 0))  # Background
    # p.draw.rect(camera_surface, blue, p.Rect(adventurer.pos_x+15, adventurer.pos_y+30, player.width, player.height)) # Draw player as rectangle
    # p.draw.rect(camera_surface, red, object_rect)  # Interactive object as rectangle
    # camera_surface.blit(frames[current_frame], (adventurer.pos_x, adventurer.pos_y))  # Player animation

 # #Zoom in Area (Use for other section)
    # view_rect = p.Rect(
    #     adventurer.pos_x - screen.get_width() // (2 * zoom_scale),
    #     adventurer.pos_y - screen.get_height() // (2 * zoom_scale),
    #     screen.get_width() // zoom_scale,
    #     screen.get_height() // zoom_scale
    # )
    # view_rect.clamp_ip(camera_surface.get_rect())
    # screen.blit(p.transform.scale(camera_surface.subsurface(view_rect), screen.get_size()), (0, 0))